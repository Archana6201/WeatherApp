{"version":3,"sources":["component/WeatherInfo.js","component/Temp.js","images/background.jpg","App.js","index.js"],"names":["WeatherInfo","tempInfo","temp","humidity","pressure","name","speed","country","sunset","date","Date","SunsetTime","getHours","getMinutes","className","Temp","useState","searchValue","setSearchValue","setTempInfo","getWeatherInfo","a","url","fetch","res","json","data","main","wind","sys","useEffect","type","placeholder","value","onChange","e","target","onClick","App","ReactDOM","render","document","getElementById"],"mappings":"6MAyFeA,EAtFK,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAEfC,EAOID,EAPJC,KACAC,EAMIF,EANJE,SACAC,EAKIH,EALJG,SACAC,EAIIJ,EAJJI,KACAC,EAGIL,EAHJK,MACAC,EAEIN,EAFJM,QACAC,EACIP,EADJO,OAIIC,EAAO,IAAIC,KAAW,IADhBF,GAENG,EAAU,UAAMF,EAAKG,WAAX,cAA2BH,EAAKI,cAInD,OACK,mCACE,yBAASC,UAAU,OAAnB,SACF,sBAAKA,UAAU,iBAAf,UACE,qBAAKA,UAAU,OAAf,SACE,mBAAGA,UAAU,uBAEf,sBAAKA,UAAU,eAAf,UACE,qBAAKA,UAAU,cAAf,SACE,iCAAOZ,EAAP,aAEF,sBAAKY,UAAU,cAAf,UACE,qBAAKA,UAAU,oBAAf,oBACA,sBAAKA,UAAU,QAAf,UAAwBT,EAAxB,IAA+BE,WAInC,sBAAKO,UAAU,aAAf,UACE,qBAAKA,UAAU,aAAf,SACE,sBAAKA,UAAU,mBAAf,UACE,4BACE,mBAAGA,UAAW,mBAEhB,oBAAGA,UAAU,gBAAb,UACGH,EADH,MACiB,uBADjB,iBAMJ,qBAAKG,UAAU,aAAf,SACE,sBAAKA,UAAU,mBAAf,UACE,4BACE,mBAAGA,UAAW,qBAEhB,oBAAGA,UAAU,gBAAb,UACCX,EAAS,uBADV,mBAMJ,qBAAKW,UAAU,aAAf,SACE,sBAAKA,UAAU,mBAAf,UACE,4BACE,mBAAGA,UAAW,iBAEhB,oBAAGA,UAAU,gBAAb,UACGV,EAAS,uBADZ,mBAMJ,qBAAKU,UAAU,aAAf,SACE,sBAAKA,UAAU,mBAAf,UACE,4BACE,mBAAGA,UAAW,wBAEhB,oBAAGA,UAAU,gBAAb,UACGR,EAAM,uBADT,2BCjBDS,GC3DA,IDIF,WACX,MAAsCC,mBAAS,eAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KACA,EAAgCF,mBAAS,IAAzC,mBAAOf,EAAP,KAAiBkB,EAAjB,KAEMC,EAAc,uCAAG,kDAAAC,EAAA,6DAEfC,EAFe,4DAE4CL,EAF5C,iEAIHM,MAAMD,GAJH,cAIfE,EAJe,gBAKFA,EAAIC,OALF,OAKfC,EALe,SAOkBA,EAAKC,KAAlCzB,EAPW,EAOXA,KAAMC,EAPK,EAOLA,SAAUC,EAPL,EAOKA,SAChBC,EAASqB,EAATrB,KACAC,EAAUoB,EAAKE,KAAftB,MATW,EAUSoB,EAAKG,IAAzBtB,EAVW,EAUXA,QAASC,EAVE,EAUFA,OAYjBW,EAVyB,CACvBjB,OACAC,WACAC,WACAC,OACAC,QACAC,UACAC,WAnBiB,4CAAH,qDA8BpB,OAJAsB,qBAAU,WACRV,MACC,IAGD,mCACA,sBAAKN,UAAU,iBAAf,UAEE,sBAAKA,UAAU,SAAf,UACE,uBACEiB,KAAK,OACLC,YAAY,YACZC,MAAOhB,EACPiB,SAAU,SAACC,GAAD,OAAOjB,EAAeiB,EAAEC,OAAOH,UAE3C,wBAAQF,KAAK,SAASM,QAASjB,EAA/B,uBAIF,cAAC,EAAD,CAAanB,SAAUA,W,YExCdqC,MARf,WACE,OACE,mCACA,cAAC,EAAD,OCJJC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.dc861ee8.chunk.js","sourcesContent":["import React from 'react'\r\n\r\n\r\nconst WeatherInfo = ({ tempInfo }) => {\r\n        const {\r\n        temp,\r\n        humidity,\r\n        pressure,\r\n        name,\r\n        speed,\r\n        country,\r\n        sunset\r\n        } = tempInfo;\r\n\r\n        let sec = sunset;\r\n        let date = new Date(sec * 1000);\r\n        let SunsetTime = `${date.getHours()} : ${date.getMinutes()}`;\r\n\r\n        \r\n\r\n   return (\r\n        <>\r\n          <article className=\"Info\">\r\n        <div className=\"Info-container\">\r\n          <div className=\"icon\">\r\n            <i className=\"wi wi-day-cloudy\"></i>\r\n          </div>\r\n          <div className=\"weather-info\">\r\n            <div className=\"temperature\">\r\n              <span>{temp}Â°C</span>\r\n            </div>\r\n            <div className=\"discription\">\r\n              <div className=\"weather-condition\">SUNNY,</div>\r\n              <div className=\"place\">{name},{country}</div>\r\n            </div>\r\n            {/* <div className=\"date\">{new Date().toLocaleString()}</div> */}\r\n          </div>\r\n          <div className=\"extra-Info\">\r\n            <div className=\"minmaxInfo\">\r\n              <div className=\"two-side-section\">\r\n                <p>\r\n                  <i className={\"wi wi-sunset\"}></i>\r\n                </p>\r\n                <p className=\"leftside-Info\">\r\n                  {SunsetTime} PM<br />\r\n                  Sunset\r\n                </p>\r\n              </div>\r\n            </div>\r\n            <div className=\"minmaxInfo\">\r\n              <div className=\"two-side-section\">\r\n                <p>\r\n                  <i className={\"wi wi-humidity\"}></i>\r\n                </p>\r\n                <p className=\"leftside-Info\">\r\n                {humidity}<br />\r\n                  Humidity\r\n                </p>\r\n              </div>\r\n            </div>\r\n            <div className=\"minmaxInfo\">\r\n              <div className=\"two-side-section\">\r\n                <p>\r\n                  <i className={\"wi wi-rain\"}></i>\r\n                </p>\r\n                <p className=\"leftside-Info\">\r\n                  {pressure}<br />\r\n                  Pressure\r\n                </p>\r\n              </div>\r\n            </div>\r\n            <div className=\"minmaxInfo\">\r\n              <div className=\"two-side-section\">\r\n                <p>\r\n                  <i className={\"wi wi-strong-wind\"}></i>\r\n                </p>\r\n                <p className=\"leftside-Info\">\r\n                  {speed}<br />\r\n                  Speed\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </article>  \r\n        </>\r\n    )\r\n}\r\n\r\nexport default WeatherInfo\r\n","import React, { useState, useEffect } from \"react\";\r\nimport WeatherInfo from \"./WeatherInfo\";\r\nimport BgPic from '../images/background.jpg';\r\n\r\nconst Temp = () => {\r\n  const [searchValue, setSearchValue] = useState(\"Muzaffarpur\");\r\n  const [tempInfo, setTempInfo] = useState({});\r\n\r\n  const getWeatherInfo = async () => {\r\n   \r\n      let url = `https://api.openweathermap.org/data/2.5/weather?q=${searchValue}&units=metric&appid=c5526f4a32717cce3f63dc341a5487a0`;\r\n\r\n      let res = await fetch(url);\r\n      let data = await res.json();\r\n\r\n      const { temp, humidity, pressure } = data.main;\r\n      const { name } = data;\r\n      const { speed } = data.wind;\r\n      const { country, sunset } = data.sys;\r\n\r\n      const myNewWeatherInfo = {\r\n        temp,\r\n        humidity,\r\n        pressure,\r\n        name,\r\n        speed,\r\n        country,\r\n        sunset,\r\n      };\r\n\r\n      setTempInfo(myNewWeatherInfo);\r\n   \r\n  };\r\n\r\n  useEffect(() => {\r\n    getWeatherInfo();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n    <div className=\"main-container\">\r\n    {/* <img src={BgPic} alt=\"img..\"></img> */}\r\n      <div className=\"search\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Search...\"\r\n          value={searchValue}\r\n          onChange={(e) => setSearchValue(e.target.value)}\r\n        ></input>\r\n        <button type=\"button\" onClick={getWeatherInfo}>\r\n          Search\r\n        </button>\r\n      </div>\r\n      <WeatherInfo tempInfo={tempInfo} />\r\n    </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Temp;\r\n","export default __webpack_public_path__ + \"static/media/background.9830b313.jpg\";","import './App.scss';\nimport Temp from './component/Temp';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"weather-icons/css/weather-icons.css\";\n\nfunction App() {\n  return (\n    <>\n    <Temp />\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App /> ,document.getElementById('root'));\n\n"],"sourceRoot":""}